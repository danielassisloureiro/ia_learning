import streamlit as st

st.set_page_config(page_title="Escolha de Modelo de ML", layout="wide")
st.title("ü§ñ Fluxograma Interativo de Escolha de Modelos de Machine Learning")

st.markdown("""
### üìç Passo 1: Seu problema tem r√≥tulos (labels)?
""")

label_type = st.radio("Selecione uma op√ß√£o:", ["Sim", "N√£o"])

if label_type == "Sim":
    st.markdown("""
    ### üß† Passo 2: Qual o tipo de sa√≠da?
    """)
    output_type = st.radio("Tipo de sa√≠da:", ["Categ√≥rica (Classifica√ß√£o)", "Num√©rica cont√≠nua (Regress√£o)"])

    if output_type == "Categ√≥rica (Classifica√ß√£o)":
        st.markdown("""
        #### Recomenda√ß√£o de Modelos:
        - **Simples:** `Logistic Regression`, `Decision Tree`
        - **M√©dia complexidade:** `Random Forest`, `SVM`
        - **Alta performance:** `XGBoost`, `Neural Networks`
        """)

    elif output_type == "Num√©rica cont√≠nua (Regress√£o)":
        st.markdown("""
        #### Recomenda√ß√£o de Modelos:
        - **Relacionamento Linear:** `Linear Regression`
        - **N√£o linear:** `Random Forest Regressor`, `XGBoost Regressor`
        """)

else:
    st.markdown("""
    ### üß© Passo 2: O que voc√™ deseja fazer?
    """)
    task_type = st.radio("Objetivo:", ["Agrupar dados (Clustering)", "Reduzir vari√°veis (Redu√ß√£o de dimensionalidade)"])

    if task_type == "Agrupar dados (Clustering)":
        st.markdown("""
        #### Recomenda√ß√£o de Modelos:
        - **Grupos bem separados:** `K-Means`
        - **Com ru√≠do ou formas arbitr√°rias:** `DBSCAN`, `Hierarchical Clustering`
        """)
    else:
        st.markdown("""
        #### Recomenda√ß√£o de Modelos:
        - **Visualiza√ß√£o de alta dimensionalidade:** `t-SNE`, `UMAP`
        - **Pr√©-processamento / compress√£o:** `PCA`
        """)

st.markdown("---")

st.markdown("""
### ü§ñ Deseja trabalhar com dados de imagem, texto ou s√©ries temporais?

Se sim, explore modelos de **Deep Learning**:
- **Imagens:** `CNN`
- **Texto:** `Transformers` (ex: BERT, GPT)
- **Sequ√™ncias temporais:** `RNN`, `LSTM`
""")
